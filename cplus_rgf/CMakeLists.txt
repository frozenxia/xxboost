cmake_minimum_required(VERSION 2.8.0)

project(xxboost)

# whether to use openmp (default is on)
# whether to use openmp (default is on)
option(OPENMP "Use openmp for multi-threads" ON)
set(CMAKE_CXX_FLAGS "-O3 -std=c++11")
add_definitions("-DUSE_OMP")
if (OPENMP)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")

    message("use openmp for multi-threads")
    add_definitions("-DUSE_OMP")
    if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
        message("darwin")
        if (NOT CMAKE_CXX_COMPILER_ID MATCHES "[gG][nN][uU]")
            message(FATAL_ERROR " compilation only with g++")
        endif ()
        set(CMAKE_CXX_COMPILER_ID "GNU")
    endif ()
    message("standard c++11 compiler")
endif ()

#set(CMAKE_CXX_FLAGS "-g -std=c++11 -Wall")
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -ftree-vectorize -ffast-math -fopenmp ")
endif ()
get_directory_property(cDirDefs DIRECTORY ${CMAKE_SOURCE_DIR} COMPILE+DEFINITIONS)
message("c++  compiler= " ${CMAKE_CXX_COMPILER})
message("c++  options= " ${CMAKE_CXX_FLAGS})
message("")
message("c++  definitions= " ${cDirDefs})
include_directories(include)
add_subdirectory(src/base)
#add_subdirectory(src/forest)
add_subdirectory(src/exe)